// ========================
// Домашнее задание.

// Курс: Разработка интерфейса на JavaScript.
// Дисциплина: Основы JavaScript.

// Домашнее задание №28: Прототипы. Контекст. Виды функций. Замыкания.

// Решите данные задачи.
// 1. Создайте объект с несколькими ключами и попытайтесь вызвать у него функцию, 
// которой нет у этого объекта, которая посчитает количество букв в строке.

// 2. Комбинирования прототипа и контекста. 
// Написать функцию, которая возведёт переменную (число) в степень.

// 3. Написать функции через замыкания, которая выводит полный URL путь к сайту.
// `http://${url}.${domain}` Внешняя функция принимает domain, а внутренняя URL. 
// ========================










// ========================
// ДЗ №28 — Задача 1: Создайте объект с несколькими ключами и попытайтесь вызвать у него функцию, 
// которой нет у этого объекта, которая посчитает количество букв в строке.
// ========================

/**
 * Создаём объект с данными. У него нет метода countLetters,
 * но этот метод мы добавим позже в прототип String, чтобы всё работало.
 */
const myObject = {
    name: "Frontend",
    course: "JavaScript",
    lesson: 28
  };
  
  /**
   * Добавляем в прототип String метод countLetters,
   * который возвращает количество букв в строке (без пробелов).
   */
  String.prototype.countLetters = function () {
    return this.replace(/\s+/g, '').length;
  };
  
  // Пытаемся вызвать метод у строки из объекта
  console.log("Количество букв в name:", myObject.name.countLetters()); // 8
  console.log("Количество букв в course:", myObject.course.countLetters()); // 10
  
  
  // ========================
  // ДЗ №28 — Задача 2: Комбинирования прототипа и контекста. 
  // Написать функцию, которая возведёт переменную (число) в степень.
  // ========================
  
  /**
   * Конструктор объекта, у которого есть значение (число).
   */
  function Calculator(value) {
    this.value = value;
  }
  
  /**
   * Добавляем в прототип метод power, который принимает степень
   * и возводит this.value в эту степень. Используем Math.pow.
   */
  Calculator.prototype.power = function (exp) {
    return Math.pow(this.value, exp);
  };
  
  const calc = new Calculator(3);
  console.log("3^4 =", calc.power(4)); // 81
  
  
  // ========================
  // ДЗ №28 — Задача 3: Написать функции через замыкания, которая выводит полный URL путь к сайту.
  // `http://${url}.${domain}` Внешняя функция принимает domain, а внутренняя URL
  // ========================
  
  /**
   * Внешняя функция принимает домен, например "com" или "org",
   * и возвращает другую функцию, которая принимает url (доменное имя).
   * Результат — полный адрес в формате: http://example.com
   */
  function createUrl(domain) {
    return function (url) {
      return `http://${url}.${domain}`;
    };
  }
  
  const makeComUrl = createUrl("com");
  const makeOrgUrl = createUrl("org");
  
  console.log("URL 1:", makeComUrl("google")); // http://google.com
  console.log("URL 2:", makeOrgUrl("wikipedia")); // http://wikipedia.org

  
  
